# config/packages/security.yaml
security:
  password_hashers:
    App\Entity\User: 'auto'

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: app_user_provider
      custom_authenticator: App\Security\LoginFormAuthenticator
      user_checker: App\Security\UserChecker
      logout:
        path: app_logout
        target: app_login
      # remember_me:
      #    secret: '%kernel.secret%'
      #    lifetime: 604800

  role_hierarchy:
    ROLE_ADMIN:       [ROLE_CONDUCTEUR, ROLE_USER]
    ROLE_CONDUCTEUR:  ROLE_USER

  # Control access for large sections of your site
  access_control:
    # Public access routes first
    - { path: ^/login$, roles: PUBLIC_ACCESS }
    - { path: ^/register$, roles: PUBLIC_ACCESS }
    - { path: ^/home$, roles: PUBLIC_ACCESS }
    - { path: ^/$, roles: PUBLIC_ACCESS }

    # --- CORRECTED ORDER ---
    # Allow Conducteur (and Admin via hierarchy) access to Parcour management FIRST
    - { path: ^/admin/parcour, roles: ROLE_CONDUCTEUR }

    # THEN, restrict the rest of /admin to only Admins
    - { path: ^/admin, roles: ROLE_ADMIN }
    # --- END CORRECTION ---

    # Secure the Conducteur-specific area
    - { path: ^/conducteur, roles: ROLE_CONDUCTEUR }

    # Secure other specific user areas
    - { path: ^/profile, roles: ROLE_USER }
    - { path: ^/reserve/, roles: ROLE_USER }
    - { path: ^/my-reservations$, roles: ROLE_USER } # If you create this route

    # Default access for any logged-in user (covers /home etc.)
    - { path: ^/, roles: ROLE_USER }

# Configuration specific to the test environment
when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4
        time_cost: 3
        memory_cost: 10